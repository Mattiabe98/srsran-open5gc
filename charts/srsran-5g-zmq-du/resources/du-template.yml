# This example configuration outlines how to configure the srsRAN Project gNB to create a single TDD cell
# transmitting in band 78, with 20 MHz bandwidth and 30 kHz sub-carrier-spacing. A USRP B200 is configured 
# as the RF frontend using split 8. Note in this example an external clock source is not used, so the sync 
# is not defined and the default is used. 

f1ap:
  cu_cp_addr: ${CU_ADDR}
  bind_addr: ${DU_BIND_ADDR}
  
ru_sdr:
  device_driver: {{ .Values.config.ru_sdr.device_driver }}                                               # The RF driver name.
  device_args: {{ .Values.config.ru_sdr.device_args }}     # Optionally pass arguments to the selected RF driver.
  srate: {{ .Values.config.ru_sdr.srate }}
  tx_gain: {{ .Values.config.ru_sdr.tx_gain }}                     # Transmit gain of the RF might need to adjusted to the given situation.
  rx_gain: {{ .Values.config.ru_sdr.rx_gain }}                       # Receive gain of the RF might need to adjusted to the given situation.

cell_cfg:
  dl_arfcn: {{ .Values.config.cell_cfg.dl_arfcn }}                  # ARFCN of the downlink carrier (center frequency).
  band: {{ .Values.config.cell_cfg.band }}                           # The NR band.
  channel_bandwidth_MHz: {{ .Values.config.cell_cfg.channel_bandwidth_MHz }}          # Bandwith in MHz. Number of PRBs will be automatically derived.
  common_scs: {{ .Values.config.cell_cfg.common_scs }}                    # Subcarrier spacing in kHz used for data.
  plmn: {{ .Values.config.cell_cfg.plmn }}                   # PLMN broadcasted by the gNB.
  tac: {{ .Values.config.cell_cfg.tac }}                            # Tracking area code (needs to match the core configuration).

log:
  filename: stdout          # Path of the log file.
  all_level: info                   # Logging level applied to all layers.

pcap:
  mac_enable: false                 # Set to true to enable MAC-layer PCAPs.
  mac_filename: ./gnb_mac.pcap   # Path where the MAC PCAP is stored.
